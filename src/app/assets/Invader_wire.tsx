/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 .\public\invader.glb --transform --types
*/

import * as THREE from 'three'
import { Wireframe, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { animated } from '@react-spring/three'

type GLTFResult = GLTF & {
  nodes: {
    Plane001: THREE.Mesh
  }
  materials: {
    green: THREE.MeshBasicMaterial
  }
}
useGLTF.preload('/invader.glb')

const AnimatedWireframe = animated(Wireframe);

export default function Model({ base, stroke_opacity, fill_opacity, fill }: { base: JSX.IntrinsicElements['group'], stroke_opacity: number, fill_opacity: number, fill: number }) {
  const { nodes } = useGLTF('/invader.glb') as GLTFResult;

  const invader_colour = new THREE.Color(0x3cf000);
  const srgb_invader_colour = invader_colour.convertLinearToSRGB();

  return (
    <animated.group {...base} dispose={null} >
      <mesh scale={[3, 1, 4]}>
      {/* @ts-ignore - typescript bug apparently */}
        <AnimatedWireframe
          geometry={nodes.Plane001.geometry}
          stroke={srgb_invader_colour}
          strokeOpacity={stroke_opacity}
          fill={fill}
          fillOpacity={fill_opacity} />
      </mesh>
    </animated.group>
  )
}